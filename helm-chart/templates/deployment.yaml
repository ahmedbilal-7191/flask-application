apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app-deployment
spec:
  replicas: { { .Values.flaskApp.replicaCount } }
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: web
          image: { { .Values.flaskApp.image } }
          imagePullPolicy: Always
          ports:
            - containerPort: { { .Values.flaskApp.containerPort } }
          envFrom:
            - configMapRef:
                name: flask-app-config
          env:
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_PASSWORD
          livenessProbe:
            httpGet:
              path: /healthz
              port: { { .Values.flaskApp.containerPort } }
            initialDelaySeconds: 10
            periodSeconds: 15
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /readyz
              port: { { .Values.flaskApp.containerPort } }
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
